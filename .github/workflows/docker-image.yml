name: Docker Image CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  configuration-test:
    strategy:
      matrix:
        param:
          - --solver cvc5 --r1cs ./benchmarks/circomlib-cff5ab6/Decoder@multiplexer.r1cs
          - --solver z3   --r1cs ./benchmarks/circomlib-cff5ab6/Decoder@multiplexer.r1cs
          - --solver cvc5 --circom ./benchmarks/circomlib-cff5ab6/Decoder@multiplexer.circom --opt-level 0
          - --solver cvc5 --circom ./benchmarks/circomlib-cff5ab6/Decoder@multiplexer.circom --opt-level 2 --patch-circom
    runs-on: ubuntu-latest
    container: 
      image: veridise/picus:git-latest
    env:
      PLTADDONDIR: /root/.local/share/racket/
    steps:
      - uses: actions/checkout@v1
      - name: linking circom
        run: ln -s /root/.cargo/bin/circom /usr/bin/circom
      - name: compile circomlib
        run: bash ./scripts/prepare-circomlib.sh
      - name: run picus with param ${{ matrix.param }}
        run: |
          racket ./picus.rkt ${{ matrix.param }} | tee result.out
        shell: bash # this ensures that pipefail is set
      - name: test expected result
        run: |
          grep "^weak uniqueness: unsafe\.$" ./result.out

  # run the full test with cvc5
  main-test:
    strategy:
      matrix:
        id: [0, 1, 2, 3]
    runs-on: ubuntu-latest
    container: 
      image: veridise/picus:git-latest
    env:
      PLTADDONDIR: /root/.local/share/racket/
    steps:
      - uses: actions/checkout@v1
      - name: linking circom
        run: ln -s /root/.cargo/bin/circom /usr/bin/circom
      - name: run picus with cvc5, using v3
        run: raco test ++args "--parallel ${{ matrix.id }} 4" ./tests/circomlib-test.rkt

  performance-test:
    runs-on: ubuntu-latest
    container:
      image: veridise/picus:git-latest
    env:
      PLTADDONDIR: /root/.local/share/racket/
    steps:
      - uses: actions/checkout@v1
      - name: run tests
        run: raco test ./tests/performance-test.rkt

  publish-docker:
    needs: [configuration-test, main-test, performance-test]
    name: "Publish Docker image to DockerHub"
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push to DockerHub
        uses: docker/build-push-action@v3
        with:
          push: true
          file: Dockerfile
          tags: veridise/picus:git-latest, veridise/picus:git-${{ github.sha }}
